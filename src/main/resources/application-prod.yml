server:
  port: 8080
  ssl:
    key-store: ${KEY_STORE}
    key-alias: keystore
    key-store-password: ${KEY_STORE_PASSWORD}
    key-store-type: PKCS12
  error:
    include-message: always
    include-binding-errors: always
spring:
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  cache:
    type: redis
  datasource:
    hikari:
      maximumPoolSize: 20
      max-active: 20
      max-idle: 10
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
    driverClassName: org.postgresql.Driver
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
  jpa:
    databasePlatform: org.hibernate.dialect.PostgreSQL9Dialect
  mail:
    host: ${NZ_SMTP_HOST:''}
    port: ${NZ_SMTP_PORT:''}
    username: ${NZ_EMAIL:''}
    password: ${NZ_PASSWORD:''}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: false
            required: false
          ssl:
            trust: 127.17.0.1
            enable: false
      test-connection: true
flyway:
  locations: filesystem:db/migration
  password: ${JDBC_DATABASE_PASSWORD}
  url: ${JDBC_DATABASE_URL}
  user: ${JDBC_DATABASE_USERNAME}
nz:
  mercado-pago:
    token: ${MERCADO_PAGO_TOKEN}
    url: ${MERCADO_PAGO_URL}
    auto-return: ${MERCADO_PAGO_AUTO_RETURN}
    payment:
      back-url: ${PAYMENT_BACK_URL}
  melhor-envio:
    url: ${MELHOR_ENVIO_URL}
    client-id: ${CLIENT_ID}
    client-secret: ${CLIENT_SECRET}
    user-agent: ${USER_AGENT}
    redirect-uri: ${REDIRECT_URI}
  webhook: ${WEBHOOK_URL}
  first-access:
    url: ${FIRST_ACCESS_URL}
  recovery:
    url: ${RECOVERY_URL}
  payment:
    back-url: ${PAYMENT_BACK_URL}
  email:
    from: ${EMAIL_FROM}
  allowed:
    origin: '*'
  jwt:
    secret: ${JWT_SECRET}
    expiration: 86400000